apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: secureevent
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: user-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: PORT
              value: "3000"
            - name: MONGO_URI
              value: "mongodb://mongodb.secureevent.svc.cluster.local:27017/userdb"
            - name: REDIS_URL
              value: "redis://redis.secureevent.svc.cluster.local:6379"
            - name: KAFKA_BROKERS
              value: "kafka.secureevent.svc.cluster.local:9092"
            - name: KAFKA_CLIENT_ID
              value: "user-service-dev"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: secureevent
spec:
  selector:
    app: user-service
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  type: ClusterIP
