# üîê Secret for Admin Credentials
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-secret
  namespace: secureevent
type: Opaque
stringData:
  admin-password: "admin"  # üîÅ Change this before production

---
# üìä Dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-config
  namespace: secureevent
data:
  prometheus-datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.secureevent.svc.cluster.local:9090
        isDefault: true

  loki-datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.secureevent.svc.cluster.local:3100
        isDefault: true

  sample-dashboard.json: |
    {
      "id": null,
      "uid": "cpu-dashboard",
      "title": "Sample Dashboard",
      "version": 1,
      "schemaVersion": 16,
      "tags": ["templated"],
      "panels": [
        {
          "type": "graph",
          "title": "CPU Usage",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "rate(node_cpu_seconds_total[5m])",
              "legendFormat": "{{cpu}}",
              "refId": "A"
            }
          ]
        }
      ]
    }

---
# üìÅ Dashboard Provisioning ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provisioning
  namespace: secureevent
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        options:
          path: /etc/grafana/provisioning/dashboards/json

---
# üöÄ Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: secureevent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-secret
                  key: admin-password
          volumeMounts:
            - name: dashboards
              mountPath: /etc/grafana/provisioning/dashboards/json
            - name: provisioning
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: dashboards
          configMap:
            name: grafana-dashboard-config
        - name: provisioning
          configMap:
            name: grafana-dashboard-provisioning

---
# üåê Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: secureevent
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP
